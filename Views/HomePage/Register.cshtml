@model BloodDonor.Models.BloodDonorProperty

<head>
<!-- Include Bootstrap CSS for pre-styled components and responsiveness -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />

<!-- Custom CSS styles -->
<style>
    /* Adds spacing between form fields */
    .form-group {
        margin-bottom: 15px;
        font-size:18px;
        font-weight:500;
   
    }

    /* Styles the form container with a centered, card-like appearance */
    .RegisterForm {
        background-color: rgba(255, 255, 255, 0.6); /* Slightly transparent white background */
        max-width: 600px; /* Limits form width for better readability */
        margin: 30px auto; /* Centers the form horizontally and vertically */
        padding: 20px; /* Adds padding inside the form container */
        border-radius: 8px; /* Creates rounded corners for a modern look */
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Adds a subtle shadow for depth */
    }
    select{
       width:100%;
       height:100%;
    }
   
</style>
</head>

<!-- Form container -->
<div>
    <!-- Form with Bootstrap classes for styling and layout -->
    <form asp-controller="HomePage" asp-action="Register" method="post" class="RegisterForm">
        

        <!-- Bootstrap grid system for responsive layout -->
        <div class="row">
            <!-- Form title with Bootstrap's warning background and centered text -->
            <div class="bg-warning text-center">
                <h3>Donor Register Form</h3>
            </div>
            <!-- Left Column: Contains half of the form fields -->
            <div class="col-md-6">
               
                <!-- Full Name field -->
                <div class="form-group">
                    <label asp-for="FullName" class="control-label"></label> <!-- Label dynamically binds to FullName property -->
                    <input asp-for="FullName" class="form-control" /> <!-- Form field styled with Bootstrap -->
                    <span asp-validation-for="FullName" class="text-danger"></span> <!-- Displays validation error for FullName -->
                </div>

                <!-- Email field -->
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <!-- Gender dropdown -->
                <div class="form-group">
                    <label asp-for="Gender" class="control-label"></label>
                    <select asp-for="Gender">
                        <option value="">--Select--</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                        <option value="Other">Other</option>
                    </select>
                    <span asp-validation-for="Gender" class="text-danger"></span>
                </div>

                <!-- Age field -->
                <div class="form-group">
                    <label asp-for="Age" class="control-label"></label>
                    <input asp-for="Age" class="form-control" />
                    <span asp-validation-for="Age" class="text-danger"></span>
                </div>

                <!-- Blood Group dropdown -->
                <div class="form-group">
                    <label asp-for="BloodGroup" class="control-label"></label>
                    <select asp-for="BloodGroup">
                        <option value="">--Select BloodGroup--</option> <!-- Placeholder option -->
                        @foreach (var item in (SelectList) ViewBag.BloodGroups)
                        {
                            <option value="@item.Text">@item.Text</option>
                        }
                    </select>
                    <span asp-validation-for="BloodGroup" class="text-danger"></span>
                </div>
            </div>

            <!-- Right Column: Contains the other half of the form fields -->
            <div class="col-md-6">
                <!-- Password field -->
                <div class="form-group">
                    <label asp-for="Password" class="control-label"></label>
                    <input asp-for="Password" class="form-control" type="password" /> <!-- Password input type -->
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>

                <!-- Confirm Password field -->
                <div class="form-group">
                    <label asp-for="ConfirmPassword" class="control-label"></label>
                    <input asp-for="ConfirmPassword" class="form-control" type="password" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>

                <!-- State field -->
                <div class="form-group">
                    <label asp-for="State" class="control-label"></label>
                    <select  asp-for="State">
                        <option value="">--Select State--</option>
                        @foreach (var item in (SelectList) ViewBag.States)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                    <span asp-validation-for="State" class="text-danger"></span>
                </div>

                <!-- City field -->
                <div class="form-group">
                    <!-- Label for the City input field, binds to the 'City' model property -->
                    <label asp-for="City" class="control-label"></label>

                    <!-- City dropdown select element (initially empty) -->
                    <select id="City"  asp-for="City" >
                        <!-- Default "Select City" option -->
                        <option value="">--Select City--</option>
                    </select>

                    <!-- Validation error message for the 'City' model property -->
                    <span asp-validation-for="City" class="text-danger"></span>
                </div>

                <!-- Phone Number field -->
                <div class="form-group">
                    <label asp-for="PhoneNumber" class="control-label"></label>
                    <input asp-for="PhoneNumber" class="form-control" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Submit button -->
        <div class="form-group text-center">
            <button  class="btn btn-primary">Register</button> <!-- Bootstrap button styling -->
        </div>
        <div class="text-dark">
@ViewBag.Msg
</div>
    </form>
</div>
<div class="text-danger">
    @ViewBag.Msg
</div>
<!-- Include jQuery library (needed for AJAX functionality) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
      
          
    // Attach a change event listener to the State dropdown element with the ID 'State'
    $('#State').on('change', function () {
         
        // Get the selected state ID from the dropdown
        var stateID = $(this).val();
       
        // Check if a valid state is selected (non-empty value)
        if (stateID) {
            // Make an AJAX GET request to fetch cities for the selected state
            $.get('@Url.Action("GetCities", "HomePage")', { stateID: stateID }, function (data) {
                // This callback function is executed upon a successful response from the server
                console.log(data);
                // Check if the server returned an error in the JSON response
                if (data.error) {
                    // Display the error message to the user
                    alert(data.error);
                } else {
                    // Populate the city dropdown with the cities received from the server

                    // Select the city dropdown element with the ID 'City'
                    var cityDropdown = $('#City');

                    // Clear any existing options in the city dropdown
                    cityDropdown.empty();

                    // Add a default option to the city dropdown
                    cityDropdown.append('<option value="">--Select City--</option>');

                    // Iterate through the cities in the response and add them as options
                    $.each(data, function (index, city) {
                        // Append each city as an option in the city dropdown
                        cityDropdown.append('<option value="' + city.cityName + '">' + city.cityName + '</option>');
                    });
                }
            })
            // Handle any errors that occur during the AJAX request
            .fail(function () {
                // This is triggered if the request fails (e.g., network error, server error)
                alert('Failed to fetch cities. Please try again.');
            });
        } else {
            // If no state is selected, reset the city dropdown to its default state
            $('#City').empty().append('<option value="">--Select City--</option>');
        }
    });
    
</script>
